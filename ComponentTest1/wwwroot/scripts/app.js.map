{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./Scripts/Component.ts","webpack:///./Scripts/ItemComponent.ts","webpack:///./Scripts/RootComponent.ts","webpack:///./node_modules/mustache/mustache.js","webpack:///./Scripts/app.ts","webpack:///./Scripts/Common/Dictionary.ts","webpack:///./Scripts/Common/EventsListener.ts","webpack:///./Scripts/Common/Logger.ts","webpack:///./Scripts/Common/BroadcastData.ts","webpack:///./Scripts/Common/RenderQueue.ts","webpack:///./Scripts/PageComponent.ts","webpack:///./Scripts/HeaderComponent.ts","webpack:///./Scripts/ListComponent.ts","webpack:///./Scripts/CheckBoxItemComponent.ts","webpack:///./Scripts/DatasetItemComponent.ts","webpack:///./Scripts/TextItemComponent.ts"],"names":[],"mappings":"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;;AAEA;AACA,oCAAoC;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf,cAAc;AACd,cAAc;AACd,gBAAgB;AAChB,eAAe;AACf,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB,2BAA2B;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,oBAAoB;AACpB,oBAAoB;AACpB,uBAAuB,oBAAoB,KAAK;AAChD,yBAAyB;AACzB,yBAAyB;AACzB,qBAAqB;;AAErB;AACA,wBAAwB,MAAM;AAC9B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0DAA0D;AAC1D;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mDAAmD,iBAAiB;AACpE;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,qBAAqB;AAC5B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO,wCAAwC;AAC/C;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,eAAe;AAC7D;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,eAAe;AAC7D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,WAAW,UAAU,SAAS,KAAK,oBAAoB;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,eAAe;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iDAAiD,iBAAiB;AAClE;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AA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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import { EventsListener } from \"./Common/EventsListener\";\r\nimport { BroadcastData } from \"./Common/BroadcastData\";\r\nimport { enqueueRender } from \"./Common/RenderQueue\";\r\nimport { render } from 'mustache';\r\nimport { RootComponent } from \"./RootComponent\";\r\n\r\nlet __uid = 0;\r\n\r\nexport interface EventListener {\r\n    on(event: string, listener: any): any;\r\n\r\n    off(event: string): any;\r\n}\r\n\r\nexport class EvtSource {\r\n    private evtSource: EventSource;\r\n    private listeners: { [index: string]: any } = {};\r\n\r\n    public open(url: string): void {\r\n        if (this.evtSource) {\r\n            this.remove();\r\n        }\r\n\r\n        this.evtSource = new EventSource(url);\r\n    }\r\n\r\n    public addListener(type: string, callback: (evt: Event) => void, options: boolean | AddEventListenerOptions): void {\r\n        this.evtSource.addEventListener(type, callback, options);\r\n        this.listeners[type] = callback;\r\n    }\r\n\r\n    public close(): void {\r\n        if (!this.evtSource) return;\r\n        this.evtSource.close();\r\n    }\r\n\r\n    public remove(): void {\r\n        if (!this.evtSource) return;\r\n        Object.keys(this.listeners).forEach((key) => {\r\n            this.evtSource.removeEventListener(key, this.listeners[key]);\r\n        });\r\n        this.listeners = {}\r\n        this.evtSource.close();\r\n        this.evtSource = null;\r\n    }\r\n\r\n    public onError(callback: any): void {\r\n        this.evtSource.onerror = callback;\r\n    }\r\n}\r\n\r\nexport interface ComponentInterface {\r\n    mount($element: HTMLElement): void;\r\n\r\n    unmount(): void;\r\n\r\n    getId(): string;\r\n\r\n    setId(id: string | undefined): void;\r\n\r\n    setParent(parent: ComponentInterface): void;\r\n\r\n    getParent(): ComponentInterface;\r\n\r\n    getTemplate(): string;\r\n\r\n    render(): void;\r\n\r\n    update(state: object): void;\r\n\r\n    updateStateProperties(properties: object): void;\r\n\r\n    setElement(element: HTMLElement): void;\r\n\r\n    getElement(): HTMLElement;\r\n\r\n    hasElement(): boolean;\r\n\r\n    addChild(id: string | undefined, child: ComponentInterface): void;\r\n\r\n    deleteChild(idx: number): void;\r\n\r\n    deleteAllChildren(): void;\r\n\r\n    getChildren(): ComponentInterface[]; //{ [id: string]: ComponentInterface };\r\n\r\n    findChild(id: string): ComponentInterface;\r\n\r\n    markDirty(isDirty?: boolean): void;\r\n\r\n    isDirty(): boolean;\r\n\r\n    walk(callback: Function): void;\r\n\r\n    getRenderedChildren(): {};\r\n\r\n    getRenderedContent(): string;\r\n}\r\n\r\nexport interface ComponentProps {\r\n    id?: string;\r\n    state?: {};\r\n}\r\n\r\nexport abstract class Component implements ComponentInterface, EventListener {\r\n    protected parent: ComponentInterface;\r\n    protected children: { [id: string]: ComponentInterface } = {};\r\n    protected cid: string;\r\n    protected state: object = {};\r\n    private $element: HTMLElement;\r\n    private _isDirty: boolean = true;\r\n    private _eventResolver: EventsListener;\r\n\r\n    protected eventSrc: EvtSource = new EvtSource();\r\n\r\n    constructor(props: ComponentProps = {}) {\r\n        if (props.state) {\r\n            this.setState(props.state);\r\n        }\r\n\r\n        this.cid = props.id || \"mqC-\" + ++__uid;\r\n\r\n        this.onCreated();\r\n    }\r\n\r\n    public getId(): string {\r\n        return this.cid;\r\n    }\r\n\r\n    public setId(id: string | undefined): void {\r\n        this.cid = id || this.cid;\r\n    }\r\n\r\n    public setParent(parent: ComponentInterface) {\r\n        this.parent = parent;\r\n    }\r\n\r\n    public getParent() {\r\n        return this.parent;\r\n    }\r\n\r\n    public mount($element: HTMLElement): void {\r\n        this.onBeforeMount($element);\r\n\r\n        let id = this.getId();\r\n\r\n        if (!$element.id) {\r\n            $element.id = id;\r\n        } else {\r\n            id = $element.id;\r\n        }\r\n\r\n        this.cid = id;\r\n        this.$element = $element;\r\n\r\n        this._eventResolver = new EventsListener(this);\r\n\r\n        this.onMount();\r\n    }\r\n\r\n    public unmount() {\r\n        this.eventSrc.remove();\r\n        this._eventResolver.remove();\r\n        for (let key in this.children) {\r\n            let child = this.children[key];\r\n            child.unmount();\r\n        }\r\n        this.onUnmount();\r\n    }\r\n\r\n    public markDirty(isDirty: boolean = true) {\r\n        this._isDirty = isDirty;\r\n    }\r\n\r\n    public isDirty() {\r\n        return this._isDirty;\r\n    }\r\n\r\n    public setElement(element: HTMLElement) {\r\n        this.$element = element;\r\n    }\r\n\r\n    public getElement(): HTMLElement {\r\n        if (!this.hasElement()) {\r\n            this.$element = document.getElementById(this.getId());\r\n        }\r\n\r\n        return this.$element;\r\n    }\r\n\r\n    public hasElement() {\r\n        return !!this.$element;\r\n    }\r\n\r\n    public addChild(id: string | undefined, child: ComponentInterface) {\r\n        child.setParent(this);\r\n        child.setId(id);\r\n        this.children[child.getId()] = child;\r\n    }\r\n\r\n    public deleteChild(idx: number) {\r\n        let child = this.children[idx];\r\n\r\n        if (!child) {\r\n            throw Error(\"Child \" + idx + \" not found\");\r\n        }\r\n\r\n        let $el = child.getElement();\r\n        if ($el) {\r\n            this.$element.removeChild($el);\r\n        }\r\n\r\n        this.children[idx] = undefined;\r\n    }\r\n\r\n    public deleteAllChildren() {\r\n        for (let key in this.children) {\r\n            let child = this.children[key];\r\n            let $el = child.getElement();\r\n            if ($el) {\r\n                try {\r\n                    this.$element.removeChild($el);\r\n                } catch (e) {\r\n                }\r\n            }\r\n        }\r\n        this.children = {};\r\n    }\r\n\r\n    public getChildren() {\r\n        var values = [];\r\n        for (let key in this.children) {\r\n            values.push(this.children[key]);\r\n        }\r\n        return values;\r\n    }\r\n\r\n    public findChild(id: string) {\r\n        return this.children[id];\r\n    }\r\n\r\n    public on(event: string, listener?: any) {\r\n        return this._eventResolver.addEventListener(event, listener);\r\n    }\r\n\r\n    public off(event?: string) {\r\n        return this._eventResolver.removeEventListener(event);\r\n    }\r\n\r\n    public render(): void {\r\n        let needRender = this.isDirty();\r\n        if (this.parent) {\r\n            needRender = needRender && !this.parent.isDirty();\r\n        }\r\n\r\n        if (needRender) {\r\n            this.onBeforeRender();\r\n            this._render();\r\n            this.onAfterRender();\r\n        }\r\n\r\n        //for (let key in this.children) {\r\n        //    let child = this.children[key];\r\n        //    child.render();\r\n        //}\r\n\r\n        this.onAfterChildrenRendered();\r\n    }\r\n\r\n    public getTemplate(): string {\r\n        return null;\r\n    }\r\n\r\n    public onBroadcast(ed: BroadcastData) { /* abstract */\r\n    }\r\n\r\n    /**\r\n     * You can pass list of actions or a map of action -> data.\r\n     * Examples:\r\n     * - broadcast('action1', 'action2', ...)\r\n     * - broadcast({action1: data, action2: data, ...})\r\n     * @param actions\r\n     * @returns {Component}\r\n     */\r\n    public broadcast(...actions: any[]) {\r\n        let ed = new BroadcastData(this, actions);\r\n        RootComponent.root.walk(function (component: ComponentInterface | any) {\r\n            if (component['onBroadcast'] !== undefined) {\r\n                component['onBroadcast'](ed);\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    public walk(callback: Function) {\r\n        for (let key in this.children) {\r\n            let child = this.children[key];\r\n            child.walk(callback);\r\n        }\r\n        callback(this);\r\n\r\n        return this;\r\n    }\r\n\r\n    protected onCreated() { /* abstract */\r\n    }\r\n\r\n    protected onBeforeMount($element: HTMLElement) { /* abstract */\r\n    }\r\n\r\n    protected onMount() { /* abstract */\r\n    }\r\n\r\n    protected onUnmount() { /* abstract */\r\n    }\r\n\r\n    protected onBeforeRender() { /* abstract */\r\n    }\r\n\r\n    protected onAfterRender() { /* abstract */\r\n    }\r\n\r\n    protected onBeforeUpdate() { /* abstract */\r\n    }\r\n\r\n    protected onAfterUpdate() { /* abstract */\r\n    }\r\n\r\n    protected onAfterChildrenRendered() { /* abstract */\r\n    }\r\n\r\n    public update(state: object) {\r\n        // update only if necessary\r\n        if (JSON.stringify(state) !== JSON.stringify(this.state)) {\r\n            this.markDirty();\r\n        }\r\n\r\n        this.setState(state);\r\n\r\n        enqueueRender(this);\r\n    }\r\n\r\n    public updateStateProperties(properties: object) {\r\n        let state = { ...this.state, ...properties };\r\n\r\n        this.update(state);\r\n    }\r\n\r\n    protected getState() {\r\n        return { ...{}, ...this.state };\r\n    }\r\n\r\n    /**\r\n     * Sets component state and props\r\n     * state is cloned (NOT DEEP CLONE)\r\n     * @param {Object} state\r\n     */\r\n    protected setState(state: object) {\r\n        this.onBeforeUpdate();\r\n        this.state = { ...{}, ...state };\r\n        this.onAfterUpdate();\r\n    }\r\n\r\n    show(): void {\r\n        this.getElement().style.display = \"block\";\r\n    }\r\n\r\n    hide(): void {\r\n        this.getElement().style.display = \"none\";\r\n    }\r\n\r\n    isShown(): boolean {\r\n        return this.getElement().style.display == \"block\";\r\n    }\r\n\r\n    addClassName(className: string): void {\r\n        if (this.hasClassName(className)) {\r\n            return;\r\n        }\r\n\r\n        this.getElement().className += ' ' + className;\r\n    }\r\n\r\n    removeClassName(className: string): void {\r\n        let $el = this.getElement();\r\n        $el.className = $el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n    }\r\n\r\n    hasClassName(className: string): boolean {\r\n        return new RegExp('(^| )' + className + '( |$)', 'gi').test(this.getElement().className);\r\n    }\r\n\r\n    public getRoute(): string {\r\n        return location.hash.replace('#/', '');\r\n    }\r\n\r\n    public getRenderedChildren(): { [key: string]: any } {\r\n        return {};\r\n    }\r\n\r\n    public getRenderedContent(): string {\r\n        const template = this.getTemplate();\r\n\r\n        this.markDirty(false);\r\n        if (template) {\r\n            var state = <{ [key: string]: any }>{ ...this.state, ...this.getRenderedChildren() };\r\n            var partials = <{ [key: string]: any }>{ ...this.getRenderedChildren() };\r\n\r\n            for (let key in this.children) {\r\n                let child = this.children[key];\r\n                partials[key] = child.getRenderedContent();\r\n            }\r\n\r\n            var result = '<div id=\"' + this.getId() + '\">' + render(template, state, partials) + '</div>';\r\n            console.log(result);\r\n            return result;\r\n        }\r\n    }\r\n\r\n    private _render() {\r\n        this.markDirty(false);\r\n\r\n        const rendered = this.getRenderedContent();\r\n\r\n        let element = this.getElement();\r\n        if (element) {\r\n            if (element.innerHTML !== rendered) {\r\n                element.innerHTML = rendered;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Component, ComponentProps } from \"./Component\";\r\n\r\nexport interface ItemComponentProps extends ComponentProps {\r\n}\r\n\r\nexport class ItemComponent extends Component {\r\n    protected props: ItemComponentProps;\r\n\r\n    //constructor(opts: ItemComponentProps) {\r\n    //    super(opts);\r\n    //}\r\n}\r\n","import { render } from \"mustache\";\r\nimport { Component, ComponentProps } from \"./Component\";\r\nimport { PageComponent, PageComponentProps } from \"./PageComponent\";\r\n\r\nexport interface RootComponentProps extends ComponentProps {\r\n    page: PageComponentProps\r\n}\r\n\r\nexport class RootComponent extends Component {\r\n    public static root: RootComponent;\r\n\r\n    constructor(props: PageComponentProps) {\r\n        super(props);\r\n\r\n        RootComponent.root = this;\r\n\r\n        this.addChild('page', new PageComponent(props));\r\n    }\r\n\r\n    getTemplate() {\r\n        return \"{{>page}}\";\r\n    }\r\n\r\n    public getRenderedContent(): string {\r\n        const template = this.getTemplate();\r\n\r\n        this.markDirty(false);\r\n        if (template) {\r\n            var partials = <{ [key: string]: any }>{ ...this.getRenderedChildren() };\r\n\r\n            for (let key in this.children) {\r\n                let child = this.children[key];\r\n                partials[key] = child.getRenderedContent();\r\n            }\r\n\r\n            return render(template, this.state, partials);\r\n        }\r\n    }\r\n}\r\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Mustache = factory());\n}(this, (function () { 'use strict';\n\n  /*!\n   * mustache.js - Logic-less {{mustache}} templates with JavaScript\n   * http://github.com/janl/mustache.js\n   */\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  /**\n   * Safe way of detecting whether or not the given thing is a primitive and\n   * whether it has the given property\n   */\n  function primitiveHasOwnProperty (primitive, propName) {\n    return (\n      primitive != null\n      && typeof primitive !== 'object'\n      && primitive.hasOwnProperty\n      && primitive.hasOwnProperty(propName)\n    );\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   *\n   * Tokens for partials also contain two more elements: 1) a string value of\n   * indendation prior to that tag and 2) the index of that tag on that line -\n   * eg a value of 2 indicates the partial is the third tag on this line.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n    var lineHasNonSpace = false;\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n    var indentation = '';  // Tracks indentation for tags that use it\n    var tagIndex = 0;      // Stores a count of number of tags encountered on a line\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n            indentation += chr;\n          } else {\n            nonSpace = true;\n            lineHasNonSpace = true;\n            indentation += ' ';\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n') {\n            stripSpace();\n            indentation = '';\n            tagIndex = 0;\n            lineHasNonSpace = false;\n          }\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      if (type == '>') {\n        token = [ type, value, start, scanner.pos, indentation, tagIndex, lineHasNonSpace ];\n      } else {\n        token = [ type, value, start, scanner.pos ];\n      }\n      tagIndex++;\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    stripSpace();\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, intermediateValue, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          intermediateValue = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           *\n           * In the case where dot notation is used, we consider the lookup\n           * to be successful even if the last \"object\" in the path is\n           * not actually an object but a primitive (e.g., a string, or an\n           * integer), because it is sometimes useful to access a property\n           * of an autoboxed primitive, such as the length of a string.\n           **/\n          while (intermediateValue != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = (\n                hasProperty(intermediateValue, names[index])\n                || primitiveHasOwnProperty(intermediateValue, names[index])\n              );\n\n            intermediateValue = intermediateValue[names[index++]];\n          }\n        } else {\n          intermediateValue = context.view[name];\n\n          /**\n           * Only checking against `hasProperty`, which always returns `false` if\n           * `context.view` is not an object. Deliberately omitting the check\n           * against `primitiveHasOwnProperty` if dot notation is not used.\n           *\n           * Consider this example:\n           * ```\n           * Mustache.render(\"The length of a football field is {{#length}}{{length}}{{/length}}.\", {length: \"100 yards\"})\n           * ```\n           *\n           * If we were to check also against `primitiveHasOwnProperty`, as we do\n           * in the dot notation case, then render call would return:\n           *\n           * \"The length of a football field is 9.\"\n           *\n           * rather than the expected:\n           *\n           * \"The length of a football field is 100 yards.\"\n           **/\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit) {\n          value = intermediateValue;\n          break;\n        }\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.templateCache = {\n      _cache: {},\n      set: function set (key, value) {\n        this._cache[key] = value;\n      },\n      get: function get (key) {\n        return this._cache[key];\n      },\n      clear: function clear () {\n        this._cache = {};\n      }\n    };\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    if (typeof this.templateCache !== 'undefined') {\n      this.templateCache.clear();\n    }\n  };\n\n  /**\n   * Parses and caches the given `template` according to the given `tags` or\n   * `mustache.tags` if `tags` is omitted,  and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.templateCache;\n    var cacheKey = template + ':' + (tags || mustache.tags).join(':');\n    var isCacheEnabled = typeof cache !== 'undefined';\n    var tokens = isCacheEnabled ? cache.get(cacheKey) : undefined;\n\n    if (tokens == undefined) {\n      tokens = parseTemplate(template, tags);\n      isCacheEnabled && cache.set(cacheKey, tokens);\n    }\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   *\n   * If the optional `config` argument is given here, then it should be an\n   * object with a `tags` attribute or an `escape` attribute or both.\n   * If an array is passed, then it will be interpreted the same way as\n   * a `tags` attribute on a `config` object.\n   *\n   * The `tags` attribute of a `config` object must be an array with two\n   * string values: the opening and closing tags used in the template (e.g.\n   * [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n   *\n   * The `escape` attribute of a `config` object must be a function which\n   * accepts a string as input and outputs a safely escaped string.\n   * If an `escape` function is not provided, then an HTML-safe string\n   * escaping function is used as the default.\n   */\n  Writer.prototype.render = function render (template, view, partials, config) {\n    var tags = this.getConfigTags(config);\n    var tokens = this.parse(template, tags);\n    var context = (view instanceof Context) ? view : new Context(view, undefined);\n    return this.renderTokens(tokens, context, partials, template, config);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate, config) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate, config);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate, config);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, config);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context, config);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate, config) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials, config);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate, config);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate, config);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate, config);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate, config) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate, config);\n  };\n\n  Writer.prototype.indentPartial = function indentPartial (partial, indentation, lineHasNonSpace) {\n    var filteredIndentation = indentation.replace(/[^ \\t]/g, '');\n    var partialByNl = partial.split('\\n');\n    for (var i = 0; i < partialByNl.length; i++) {\n      if (partialByNl[i].length && (i > 0 || !lineHasNonSpace)) {\n        partialByNl[i] = filteredIndentation + partialByNl[i];\n      }\n    }\n    return partialByNl.join('\\n');\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials, config) {\n    if (!partials) return;\n    var tags = this.getConfigTags(config);\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null) {\n      var lineHasNonSpace = token[6];\n      var tagIndex = token[5];\n      var indentation = token[4];\n      var indentedValue = value;\n      if (tagIndex == 0 && indentation) {\n        indentedValue = this.indentPartial(value, indentation, lineHasNonSpace);\n      }\n      var tokens = this.parse(indentedValue, tags);\n      return this.renderTokens(tokens, context, partials, indentedValue, config);\n    }\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context, config) {\n    var escape = this.getConfigEscape(config) || mustache.escape;\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return (typeof value === 'number' && escape === mustache.escape) ? String(value) : escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  Writer.prototype.getConfigTags = function getConfigTags (config) {\n    if (isArray(config)) {\n      return config;\n    }\n    else if (config && typeof config === 'object') {\n      return config.tags;\n    }\n    else {\n      return undefined;\n    }\n  };\n\n  Writer.prototype.getConfigEscape = function getConfigEscape (config) {\n    if (config && typeof config === 'object' && !isArray(config)) {\n      return config.escape;\n    }\n    else {\n      return undefined;\n    }\n  };\n\n  var mustache = {\n    name: 'mustache.js',\n    version: '4.2.0',\n    tags: [ '{{', '}}' ],\n    clearCache: undefined,\n    escape: undefined,\n    parse: undefined,\n    render: undefined,\n    Scanner: undefined,\n    Context: undefined,\n    Writer: undefined,\n    /**\n     * Allows a user to override the default caching strategy, by providing an\n     * object with set, get and clear methods. This can also be used to disable\n     * the cache by setting it to the literal `undefined`.\n     */\n    set templateCache (cache) {\n      defaultWriter.templateCache = cache;\n    },\n    /**\n     * Gets the default or overridden caching object from the default writer.\n     */\n    get templateCache () {\n      return defaultWriter.templateCache;\n    }\n  };\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view`, `partials`, and `config`\n   * using the default writer.\n   */\n  mustache.render = function render (template, view, partials, config) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials, config);\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n\n})));\n","import { Dictionary } from \"./Common/Dictionary\";\r\nimport { RootComponent } from \"./RootComponent\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        vocabulary: any;\r\n        globalState: any;\r\n        resolution: string;\r\n        onInputChange(input: HTMLInputElement): void;\r\n    }\r\n}\r\n\r\nwindow.addEventListener('load', (event) => {\r\n    console.log(\"app start\");\r\n\r\n    Dictionary.setVocabulary(window.vocabulary || {});\r\n\r\n    var rootComponent = new RootComponent(window.globalState);\r\n    var rootElement = document.getElementById(\"app\");\r\n    rootComponent.setElement(rootElement);\r\n    rootComponent.render();\r\n});\r\n","export default function W(id: string): string {\r\n    return Dictionary.getWord(id);\r\n}\r\n\r\nexport class Dictionary {\r\n    private static vocabulary: { [id: string]: string } = {};\r\n\r\n    static setVocabulary(vocabulary: { [id: string]: string }) {\r\n        Dictionary.vocabulary = vocabulary;\r\n    }\r\n\r\n    static getVocabulary() {\r\n        return Dictionary.vocabulary\r\n    }\r\n\r\n    static getWord(id: string): string {\r\n        return Dictionary.vocabulary[id] || id;\r\n    }\r\n}\r\n","import { Logger } from \"./Logger\";\r\nimport { ComponentInterface } from \"../Component\";\r\n\r\nexport class EventsListener implements EventListenerObject {\r\n    events: { [index: string]: any } = {};\r\n    private readonly listener: any | ComponentInterface;\r\n\r\n    constructor(listener: ComponentInterface) {\r\n        this.listener = listener;\r\n    }\r\n\r\n    addEventListener(event: string, listener?: any) {\r\n        const $e = <HTMLElement>this.listener.getElement();\r\n\r\n        listener = this.resolveListener(listener, event);\r\n\r\n        if (!listener) {\r\n            throw new Error(\"Invalid event listener \" + listener.toString());\r\n        }\r\n\r\n        this.events[event] = listener;\r\n        Logger.debug('listening', \"#\" + $e.id, event);\r\n\r\n        return $e.addEventListener(event, this, false);\r\n    }\r\n\r\n    removeEventListener(event?: string) {\r\n        const $e = <HTMLElement>this.listener.getElement();\r\n        const listener = this.events[event];\r\n\r\n        if (!listener) {\r\n            return;\r\n        }\r\n\r\n        delete this.events[event];\r\n\r\n        return $e.removeEventListener(event, this.resolveListener(listener, event));\r\n    }\r\n\r\n    remove(): void {\r\n        //TODO remove all listeners\r\n    }\r\n\r\n    handleEvent(e: Event) {\r\n        let eventType: string = e.type;\r\n        let listener = this.events[eventType];\r\n\r\n        if (listener === undefined) {\r\n            return;\r\n        }\r\n\r\n        if (e instanceof MutationEvent) {\r\n            //console.debug(eventType, e.relatedNode, this.listener.getElement());\r\n\r\n            if (e.relatedNode !== this.listener.getElement()) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.callListener(eventType, e);\r\n    }\r\n\r\n    private resolveListener(listener: any, event: string) {\r\n        if (typeof listener === 'function') {\r\n            return listener;\r\n        } else if (typeof listener === 'string' && typeof this.listener[listener] === 'function') {\r\n            return listener;\r\n            //} else if (typeof this.listener['on' + event.ucFirst()] === 'function') {\r\n            //    return 'on' + event.ucFirst();\r\n        } else if (typeof this.listener['on' + event.toLowerCase()] === 'function') {\r\n            return 'on' + event.toLowerCase();\r\n        } else if (typeof this.listener['on' + event] === 'function') {\r\n            return 'on' + event;\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    private callListener(eventType: string, event: Event) {\r\n        let listener = this.events[eventType];\r\n\r\n        if (typeof listener === 'function') {\r\n            listener(event);\r\n        } else {\r\n            this.listener[listener](event);\r\n        }\r\n    }\r\n}\r\n","export class Logger {\r\n    static isEnabled: boolean = false;\r\n\r\n    static enable(enable: boolean) {\r\n        Logger.isEnabled = enable;\r\n    }\r\n\r\n    static debug(msg: string, ...optionalParams: any[]) {\r\n        Logger.log(msg, 'debug', ...optionalParams);\r\n    }\r\n\r\n    static info(msg: string, ...optionalParams: any[]) {\r\n        Logger.log(msg, 'info', ...optionalParams);\r\n    }\r\n\r\n    static warn(msg: string, ...optionalParams: any[]) {\r\n        Logger.log(msg, 'warn', ...optionalParams);\r\n    }\r\n\r\n    static error(msg: string, ...optionalParams: any[]) {\r\n        Logger.log(msg, 'error', ...optionalParams);\r\n    }\r\n\r\n    static log(msg: any, type: string, ...optionalParams: any[]) {\r\n        if (!Logger.isEnabled) {\r\n            return;\r\n        }\r\n\r\n        switch (type) {\r\n            case 'debug':\r\n                console.debug(msg, ...optionalParams);\r\n                break;\r\n            case 'info':\r\n                console.info(msg, ...optionalParams);\r\n                break;\r\n            case 'warn':\r\n                console.warn(msg, ...optionalParams);\r\n                break;\r\n            case 'error':\r\n                console.error(msg, ...optionalParams);\r\n                break;\r\n            default:\r\n                console.log(msg, ...optionalParams);\r\n        }\r\n    }\r\n\r\n    private static stringifyParam(param: any): string {\r\n        let text: string;\r\n\r\n        alert(\"2\");\r\n        if (param instanceof HTMLElement) {\r\n            let tagName = param.localName.toLowerCase();\r\n            text = \" &lt;\" + tagName\r\n                + (param.id ? \" id=\\\"\" + param.id + \"\\\"\" : \"\")\r\n                + (param.getAttribute('data-is') ? \" data-is=\\\"\" + param.getAttribute('data-is') + \"\\\"\" : \"\")\r\n                + \"&gt;\";\r\n        }\r\n        else if (param === null) {\r\n            text = \"NULL\";\r\n        }\r\n        else if (param instanceof Object) {\r\n            text = \"<i>\" + param.toString() + \"</i>\";\r\n        }\r\n        else {\r\n            text = \" \" + param.toString();\r\n        }\r\n\r\n        return \" | \" + text;\r\n    }\r\n}\r\n","export class BroadcastData {\r\n    sender: any;\r\n    actions: any = {};\r\n\r\n    constructor(sender: any, actions: any[]) {\r\n        this.sender = sender;\r\n\r\n        for (let i = 0, l = actions.length; i < l; i++) {\r\n            let action = actions[i];\r\n            if (typeof action === \"string\") {\r\n                this.actions[action] = null;\r\n            } else {\r\n                this.actions = { ...this.actions, ...action };\r\n            }\r\n        }\r\n    }\r\n\r\n    hasAction(...classes: string[]) {\r\n        for (let i = 0, l = classes.length; i < l; i++) {\r\n            let a: string = classes[i];\r\n            if (this.actions[a] !== undefined) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getAction(action: any) {\r\n        return (this.actions[action] !== undefined) ? this.actions[action] : null;\r\n    }\r\n}\r\n","import { ComponentInterface } from \"../Component\";\r\n\r\nlet items: ComponentInterface[] = [];\r\n\r\nexport function clearRender() {\r\n    items = [];\r\n}\r\n\r\nexport function enqueueRender(component: ComponentInterface) {\r\n    if (component.isDirty() && items.push(component) == 1) {\r\n        window.setTimeout(rerender, 0);\r\n    }\r\n}\r\n\r\nexport function rerender() {\r\n    let component, list = items;\r\n    items = [];\r\n\r\n    for (let i in list) {\r\n        component = list[i];\r\n        if (component.isDirty() && !component.getParent().isDirty()) {\r\n            component.render();\r\n        }\r\n    }\r\n}\r\n","import { Component, ComponentProps } from \"./Component\";\r\nimport { HeaderComponent, HeaderComponentProps } from \"./HeaderComponent\";\r\nimport { ListComponent, ListComponentProps } from \"./ListComponent\";\r\n\r\nexport interface PageComponentProps extends ComponentProps {\r\n    header: HeaderComponentProps\r\n    list: ListComponentProps\r\n}\r\n\r\nexport class PageComponent extends Component {\r\n    protected props: HeaderComponentProps;\r\n\r\n    constructor(opts: PageComponentProps) {\r\n        super(opts);\r\n        this.addChild('header', new HeaderComponent(opts.header));\r\n        this.addChild('list', new ListComponent(opts.list));\r\n    }\r\n\r\n    public getTemplate(): string {\r\n        return `<div>{{>header}}</div>\r\n                <div>{{>list}}</div>`;\r\n    }\r\n}\r\n","import { Component, ComponentProps } from \"./Component\";\r\n\r\nexport interface HeaderComponentProps extends ComponentProps {\r\n    title: string\r\n}\r\n\r\nexport class HeaderComponent extends Component {\r\n    constructor(opts: HeaderComponentProps) {\r\n        super(opts);\r\n    }\r\n\r\n    public getTemplate(): string {\r\n        return `<div style=\"border: 1px solid black\">{{title}}</div>`;\r\n    }\r\n}\r\n","import { CheckBoxItemComponent } from \"./CheckBoxItemComponent\";\r\nimport { Component, ComponentProps } from \"./Component\";\r\nimport { DatasetItemComponent } from \"./DatasetItemComponent\";\r\nimport { ItemComponent } from \"./ItemComponent\";\r\nimport { TextItemComponent } from \"./TextItemComponent\";\r\n\r\nexport interface ListComponentProps extends ComponentProps {\r\n    items: []\r\n}\r\n\r\nexport class ListComponent extends Component {\r\n    protected props: ListComponentProps;\r\n\r\n    constructor(props: ListComponentProps) {\r\n        super(props);\r\n        for (var i = 0; i < props.items.length; i++) {\r\n            this.addChild(null, this.createChildren(props.items[i]));\r\n        }\r\n    }\r\n\r\n    private createChildren(props: any) {\r\n        if (props.type == 1) {\r\n            return new TextItemComponent(props);\r\n        }\r\n        if (props.type == 2) {\r\n            return new CheckBoxItemComponent(props);\r\n        }\r\n        if (props.type == 3) {\r\n            return new DatasetItemComponent(props);\r\n        }\r\n        return new ItemComponent(props);\r\n    }\r\n\r\n    public getRenderedChildren() {\r\n        console.log({ children: this.getChildren() });\r\n\r\n        return {\r\n            children: this.getChildren().map(c => c.getRenderedContent())\r\n        }\r\n    }\r\n\r\n    public getTemplate(): string {\r\n        return `{{#children}}\r\n                {{{.}}}\r\n                {{/children}}`;\r\n    }\r\n}\r\n","import { ItemComponent, ItemComponentProps } from \"./ItemComponent\";\r\n\r\nexport interface CheckBoxItemComponentProps extends ItemComponentProps {\r\n    description: string,\r\n    value: boolean\r\n}\r\n\r\nexport class CheckBoxItemComponent extends ItemComponent {\r\n    constructor(opts: CheckBoxItemComponentProps) {\r\n        super(opts);\r\n    }\r\n\r\n    public getTemplate(): string {\r\n        return `<span style=\"font-weight:bold\">{{description}}:</span>\r\n                <span>{{#value}}checked{{/value}}{{^value}}not{{/value}}</span>`;\r\n    }\r\n}","import { ItemComponent, ItemComponentProps } from \"./ItemComponent\";\r\n\r\nexport interface DatasetItemComponentProps extends ItemComponentProps {\r\n    description: string,\r\n    value: string,\r\n    allowedValues: string[]\r\n}\r\n\r\nexport class DatasetItemComponent extends ItemComponent {\r\n    constructor(opts: DatasetItemComponentProps) {\r\n        super(opts);\r\n        this.props = opts;\r\n    }\r\n\r\n    public getTemplate(): string {\r\n        return `<span style=\"font-weight:bold\">{{description}}:</span>\r\n                <span>{{value}}</span>`;\r\n    }\r\n}","import { ItemComponent, ItemComponentProps } from \"./ItemComponent\";\r\n\r\nexport interface TextItemComponentProps extends ItemComponentProps {\r\n    description: string,\r\n    value: string\r\n}\r\n\r\nexport class TextItemComponent extends ItemComponent {\r\n    protected props: TextItemComponentProps;\r\n\r\n    constructor(opts: TextItemComponentProps) {\r\n        super(opts);\r\n        this.props = opts;\r\n    }\r\n\r\n    public getTemplate(): string {\r\n        return `<span style=\"font-weight:bold\">{{description}}:</span>\r\n                <span>{{value}}</span>`;\r\n    }\r\n}\r\n"],"sourceRoot":""}